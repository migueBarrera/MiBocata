trigger:
  branches:
    include:
    - master
  paths:
    exclude:
    - src/MiBocata.Businnes
    - src/MiBocata.Client
    - src/pipelines/azure-pipelines-client.yml
    - src/pipelines/azure-pipelines-businnes.yml

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'

steps:
- task: UseDotNet@2
  inputs:
    version: '6.0.x'

- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: 'src/MiBocataAPI/MiBocataAPI.sln'
    
- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: build
    projects: 'src/MiBocataAPI/MiBocataAPI/MiBocataAPI.csproj'
    arguments: '--configuration $(buildConfiguration)' # Update this to match your need

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    arguments: '-r linux-x64 --self-contained false --configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: false
    workingDirectory: 'src/MiBocataAPI/MiBocataAPI'

# this code takes all the files in $(Build.ArtifactStagingDirectory) and uploads them as an artifact of your build.
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'myWebsiteName'

